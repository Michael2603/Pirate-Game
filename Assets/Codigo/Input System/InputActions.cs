//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Codigo/Input System/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Movimentação"",
            ""id"": ""7251ee27-2ea4-4f29-8344-f6a5ff795222"",
            ""actions"": [
                {
                    ""name"": ""Avancar"",
                    ""type"": ""Button"",
                    ""id"": ""d11f9845-07b8-42a1-bf9b-8e40997c0910"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotacionar"",
                    ""type"": ""Value"",
                    ""id"": ""ea2fef57-108a-43f0-87e6-aa254bf94497"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TiroFrontal"",
                    ""type"": ""Button"",
                    ""id"": ""feb62468-1a1d-44de-8dcb-5f113e671ea9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TiroLateral"",
                    ""type"": ""Button"",
                    ""id"": ""61bc3747-1bc3-43c4-866a-1ab9fa01c99c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4321548b-9199-4494-a163-7fb14f249962"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Scheme"",
                    ""action"": ""Avancar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba0fbf75-c00d-46ec-aeac-a54c1bd6431f"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Scheme"",
                    ""action"": ""Avancar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb782157-57bc-4dfa-9228-9a6fe5a70ee4"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad Scheme"",
                    ""action"": ""Avancar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6778470d-0519-4b28-8603-825290548180"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad Scheme"",
                    ""action"": ""Avancar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56731c53-7e07-4254-a5fb-334d7f1b2c35"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Scheme"",
                    ""action"": ""TiroFrontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e45dc27-d9bc-425a-a4c8-d4941c985b94"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Scheme"",
                    ""action"": ""TiroFrontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6592f62c-1e30-4239-9c93-2ba0d1410087"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad Scheme"",
                    ""action"": ""TiroFrontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6650cc1b-6208-4b69-8265-7eb395e83055"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Scheme"",
                    ""action"": ""TiroLateral"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b2668c7-fc9f-43a3-8fc0-9f7ca0ea32ca"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Scheme"",
                    ""action"": ""TiroLateral"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70cf7c8a-8bc7-45a6-92ae-87bca8c2f817"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad Scheme"",
                    ""action"": ""TiroLateral"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""b4a47148-cc89-4341-b2f0-1145645a9170"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotacionar"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""786920ae-1573-4e35-a970-474f18417f9b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotacionar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e5d68be7-b273-4c17-912e-69832db5798f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotacionar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""85eee010-3ba0-42c1-9d64-0e60814bb10f"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotacionar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""04dc0e76-b117-475b-8309-343a1b0dc5ce"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotacionar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""650e18d1-2de4-4404-90f5-eecc217512fc"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotacionar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""1580ef95-edf8-4690-833f-5c9c938408fb"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotacionar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard Scheme"",
            ""bindingGroup"": ""Keyboard Scheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad Scheme"",
            ""bindingGroup"": ""Gamepad Scheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Movimentação
        m_Movimentação = asset.FindActionMap("Movimentação", throwIfNotFound: true);
        m_Movimentação_Avancar = m_Movimentação.FindAction("Avancar", throwIfNotFound: true);
        m_Movimentação_Rotacionar = m_Movimentação.FindAction("Rotacionar", throwIfNotFound: true);
        m_Movimentação_TiroFrontal = m_Movimentação.FindAction("TiroFrontal", throwIfNotFound: true);
        m_Movimentação_TiroLateral = m_Movimentação.FindAction("TiroLateral", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movimentação
    private readonly InputActionMap m_Movimentação;
    private IMovimentaçãoActions m_MovimentaçãoActionsCallbackInterface;
    private readonly InputAction m_Movimentação_Avancar;
    private readonly InputAction m_Movimentação_Rotacionar;
    private readonly InputAction m_Movimentação_TiroFrontal;
    private readonly InputAction m_Movimentação_TiroLateral;
    public struct MovimentaçãoActions
    {
        private @InputActions m_Wrapper;
        public MovimentaçãoActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Avancar => m_Wrapper.m_Movimentação_Avancar;
        public InputAction @Rotacionar => m_Wrapper.m_Movimentação_Rotacionar;
        public InputAction @TiroFrontal => m_Wrapper.m_Movimentação_TiroFrontal;
        public InputAction @TiroLateral => m_Wrapper.m_Movimentação_TiroLateral;
        public InputActionMap Get() { return m_Wrapper.m_Movimentação; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovimentaçãoActions set) { return set.Get(); }
        public void SetCallbacks(IMovimentaçãoActions instance)
        {
            if (m_Wrapper.m_MovimentaçãoActionsCallbackInterface != null)
            {
                @Avancar.started -= m_Wrapper.m_MovimentaçãoActionsCallbackInterface.OnAvancar;
                @Avancar.performed -= m_Wrapper.m_MovimentaçãoActionsCallbackInterface.OnAvancar;
                @Avancar.canceled -= m_Wrapper.m_MovimentaçãoActionsCallbackInterface.OnAvancar;
                @Rotacionar.started -= m_Wrapper.m_MovimentaçãoActionsCallbackInterface.OnRotacionar;
                @Rotacionar.performed -= m_Wrapper.m_MovimentaçãoActionsCallbackInterface.OnRotacionar;
                @Rotacionar.canceled -= m_Wrapper.m_MovimentaçãoActionsCallbackInterface.OnRotacionar;
                @TiroFrontal.started -= m_Wrapper.m_MovimentaçãoActionsCallbackInterface.OnTiroFrontal;
                @TiroFrontal.performed -= m_Wrapper.m_MovimentaçãoActionsCallbackInterface.OnTiroFrontal;
                @TiroFrontal.canceled -= m_Wrapper.m_MovimentaçãoActionsCallbackInterface.OnTiroFrontal;
                @TiroLateral.started -= m_Wrapper.m_MovimentaçãoActionsCallbackInterface.OnTiroLateral;
                @TiroLateral.performed -= m_Wrapper.m_MovimentaçãoActionsCallbackInterface.OnTiroLateral;
                @TiroLateral.canceled -= m_Wrapper.m_MovimentaçãoActionsCallbackInterface.OnTiroLateral;
            }
            m_Wrapper.m_MovimentaçãoActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Avancar.started += instance.OnAvancar;
                @Avancar.performed += instance.OnAvancar;
                @Avancar.canceled += instance.OnAvancar;
                @Rotacionar.started += instance.OnRotacionar;
                @Rotacionar.performed += instance.OnRotacionar;
                @Rotacionar.canceled += instance.OnRotacionar;
                @TiroFrontal.started += instance.OnTiroFrontal;
                @TiroFrontal.performed += instance.OnTiroFrontal;
                @TiroFrontal.canceled += instance.OnTiroFrontal;
                @TiroLateral.started += instance.OnTiroLateral;
                @TiroLateral.performed += instance.OnTiroLateral;
                @TiroLateral.canceled += instance.OnTiroLateral;
            }
        }
    }
    public MovimentaçãoActions @Movimentação => new MovimentaçãoActions(this);
    private int m_KeyboardSchemeSchemeIndex = -1;
    public InputControlScheme KeyboardSchemeScheme
    {
        get
        {
            if (m_KeyboardSchemeSchemeIndex == -1) m_KeyboardSchemeSchemeIndex = asset.FindControlSchemeIndex("Keyboard Scheme");
            return asset.controlSchemes[m_KeyboardSchemeSchemeIndex];
        }
    }
    private int m_GamepadSchemeSchemeIndex = -1;
    public InputControlScheme GamepadSchemeScheme
    {
        get
        {
            if (m_GamepadSchemeSchemeIndex == -1) m_GamepadSchemeSchemeIndex = asset.FindControlSchemeIndex("Gamepad Scheme");
            return asset.controlSchemes[m_GamepadSchemeSchemeIndex];
        }
    }
    public interface IMovimentaçãoActions
    {
        void OnAvancar(InputAction.CallbackContext context);
        void OnRotacionar(InputAction.CallbackContext context);
        void OnTiroFrontal(InputAction.CallbackContext context);
        void OnTiroLateral(InputAction.CallbackContext context);
    }
}
